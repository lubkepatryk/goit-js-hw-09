{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlCMO,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAYN,IAVA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAIrCO,GAFaC,SAASJ,EAAWK,OACrBD,SAASH,EAAUI,OACtBD,SAASF,EAAYG,QAI3BC,EAAI,EAAGA,GAAKH,EAAQG,IAC3BpB,EAAc,EAAG,MACdqB,MAAK,SAAAC,GAAWA,EAARrB,SAAeqB,EAALpB,MACjBJ,EAAAyB,OAAOC,QAAQ,gD,IAEhBC,OAAM,SAAAH,GAAWA,EAARrB,SAAeqB,EAALpB,MAClBJ,EAAAyB,OAAOG,QAAQ,+C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInput.value);\n  const delayStep = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  let currentDay = firstDelay;\n\n  for (let i = 0; i <= amount; i++) {\n    createPromise(2, 1500)\n      .then(({ position, delay }) => {\n        Notify.success('✅ Fulfilled promise ${position} in ${delay}ms');\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure('❌ Rejected promise ${position} in ${delay}ms');\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","amount","parseInt","value","i","then","param","Notify","success","catch","failure"],"version":3,"file":"03-promises.361f0630.js.map"}